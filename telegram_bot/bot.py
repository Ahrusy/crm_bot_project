import logging
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import os
from dotenv import load_dotenv
import asyncio

load_dotenv()
API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
DJANGO_API_URL = os.getenv("DJANGO_API_URL")  # –ù–∞–ø—Ä–∏–º–µ—Ä: http://localhost:8000/api/

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /myinfo, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ.")

@dp.message(Command("myinfo"))
async def get_my_info(message: types.Message):
    telegram_id = message.from_user.id
    url = f"{DJANGO_API_URL}agent/{telegram_id}/"
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            data = response.json()
            text = (
                f"üë§ –ò–º—è: {data.get('name')}\n"
                f"–†–æ–ª—å: {data.get('role')}\n"
                f"–°–¥–µ–ª–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ: {data.get('deals_in_progress')}\n"
                f"–í—ã—Ä—É—á–∫–∞ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ: {data.get('current_month_revenue')}"
            )
        elif response.status_code == 404:
            text = "‚ùó–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ."
        else:
            text = "üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except requests.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        text = "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º."

    await message.reply(text)

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
